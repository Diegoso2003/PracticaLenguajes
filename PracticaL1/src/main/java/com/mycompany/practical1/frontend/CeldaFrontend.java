/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.practical1.frontend;

import com.mycompany.practical1.backend.Celda;
import java.awt.Color;

/**
 *
 * @author rafael-cayax
 */
public class CeldaFrontend extends javax.swing.JPanel {
    
    private Celda celda;
    private boolean token = false;
    
    public CeldaFrontend() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (token) {
            LexemaFrontend l = new LexemaFrontend();
            l.mostrarLexema(celda.getToken());
            l.setVisible(true);
        }
    }//GEN-LAST:event_formMouseClicked

    
    public void setCelda(Celda celda) {
        this.celda = celda;
    }
    
    public void limpiar(){
        token = false;
        this.setBackground(this.getParent().getBackground());
    }

    public void colorear(String color) {
        token = true;
        Color c = Color.decode(color);
        this.setBackground(c);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
